#! /usr/bin/env ruby

require 'pg'

CONNECTION = PG.connect(dbname: "expenses")

def list_expenses
  result = CONNECTION.exec("SELECT * FROM expenses ORDER BY created_on ASC;")
  result.each do |item|
    puts " #{item["id"].rjust(3)} | #{item["created_on"]} |#{item["amount"].rjust(12)}" \
         " | #{item["memo"]}"
  end
end

def display_help
  <<~HELP_INFO
    An expense recording system

    Commands:

    add AMOUNT MEMO [DATE] - record a new expense
    clear - delete all expenses
    list - list all expenses
    delete NUMBER - remove expense with id NUMBER
    search QUERY - list expenses with a matching memo field
  HELP_INFO
end

def add_expense(amount, memo)
  sql = "INSERT INTO expenses(amount, memo, created_on) " \
        "VALUES ($1, $2, NOW());"
  CONNECTION.exec_params(sql, [amount, memo])
end

def add_arguments_present?
  return false if ARGV[1].nil? || ARGV[2].nil?
  true
end

command = ARGV[0]
case command
when 'list'
  list_expenses
when 'add'
  puts 'You must provide an amount and memo.' unless add_arguments_present?
  add_expense(ARGV[1], ARGV[2]) if add_arguments_present?
else
  puts display_help
end